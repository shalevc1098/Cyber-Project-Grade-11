#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Mar 19, 2021 12:37:28 PM +0200  platform: Windows NT

import sys
import socket
sys.path.insert(0, 'C:/Users/Shalev/Desktop/תיקיות/Python Project/GUIS/hub')
import hub

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import login_support

def on_closing(my_socket, root):
    my_socket.shutdown(socket.SHUT_RDWR)
    my_socket.close()
    root.destroy()

def vp_start_gui(my_socket):
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Login (my_socket, root)
    login_support.init(root, top)
    root.protocol("WM_DELETE_WINDOW", lambda: on_closing(my_socket, root))
    root.mainloop()

def login_command(top, my_socket, username, password, label):
    if (username and password) != "":
        my_socket.send(f"db,login,{username},{password}".encode())
        response = my_socket.recv(1024).decode()
        if "logged successfully" in response:
            top.destroy()
            hub.vp_start_gui(my_socket, username)
        else:
            label.configure(text=response)

w = None
def create_Login(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Login(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Login (w)
    login_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Login():
    global w
    w.destroy()
    w = None

class Login:
    def __init__(self, my_socket, top=None):
        self.my_socket = my_socket
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("600x450+615+242")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Login")
        top.configure(background="#d9d9d9")

        self.Login_Button = tk.Button(top)
        self.Login_Button.place(relx=0.25, rely=0.444, height=24, width=307)
        self.Login_Button.configure(activebackground="#ececec")
        self.Login_Button.configure(activeforeground="#000000")
        self.Login_Button.configure(background="#d9d9d9")
        self.Login_Button.configure(cursor="hand2")
        self.Login_Button.configure(disabledforeground="#a3a3a3")
        self.Login_Button.configure(foreground="#000000")
        self.Login_Button.configure(highlightbackground="#d9d9d9")
        self.Login_Button.configure(highlightcolor="black")
        self.Login_Button.configure(pady="0")
        self.Login_Button.configure(text='''Login''')

        self.Username = tk.Label(top)
        self.Username.place(relx=0.217, rely=0.244, height=31, width=104)
        self.Username.configure(background="#d9d9d9")
        self.Username.configure(disabledforeground="#a3a3a3")
        self.Username.configure(font="-family {Segoe UI} -size 12")
        self.Username.configure(foreground="#000000")
        self.Username.configure(text='''Username''')

        self.Password = tk.Label(top)
        self.Password.place(relx=0.217, rely=0.333, height=31, width=104)
        self.Password.configure(activebackground="#f9f9f9")
        self.Password.configure(activeforeground="black")
        self.Password.configure(background="#d9d9d9")
        self.Password.configure(disabledforeground="#a3a3a3")
        self.Password.configure(font="-family {Segoe UI} -size 12")
        self.Password.configure(foreground="#000000")
        self.Password.configure(highlightbackground="#d9d9d9")
        self.Password.configure(highlightcolor="black")
        self.Password.configure(text='''Password''')

        self.Password_Entry = tk.Entry(top)
        self.Password_Entry.place(relx=0.383, rely=0.356, height=20, relwidth=0.373)
        self.Password_Entry.configure(background="white")
        self.Password_Entry.configure(disabledforeground="#a3a3a3")
        self.Password_Entry.configure(font="TkFixedFont")
        self.Password_Entry.configure(foreground="#000000")
        self.Password_Entry.configure(insertbackground="black")

        self.Username_Entry = tk.Entry(top)
        self.Username_Entry.place(relx=0.383, rely=0.267, height=20, relwidth=0.373)
        self.Username_Entry.configure(background="white")
        self.Username_Entry.configure(disabledforeground="#a3a3a3")
        self.Username_Entry.configure(font="TkFixedFont")
        self.Username_Entry.configure(foreground="#000000")
        self.Username_Entry.configure(highlightbackground="#d9d9d9")
        self.Username_Entry.configure(highlightcolor="black")
        self.Username_Entry.configure(insertbackground="black")
        self.Username_Entry.configure(selectbackground="blue")
        self.Username_Entry.configure(selectforeground="white")

        self.Login_Label = tk.Label(top)
        self.Login_Label.place(relx=0.45, rely=0.52, anchor="center")
        self.Login_Label.configure(background="#d9d9d9")
        self.Login_Label.configure(foreground="#000000")


        self.Login_Button.configure(command=lambda: login_command(top, self.my_socket, self.Username_Entry.get(), self.Password_Entry.get(), self.Login_Label))